----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\analyses\opensafely-ics-research\analysis\asthma_log\04_an_descriptive_table_asthma.log
  log type:  text
 opened on:  27 Jul 2020, 13:45:48

. 
. * Open Stata dataset
. use $tempdir\analysis_dataset, clear

. 
. /* PROGRAMS TO AUTOMATE TABULATIONS===========================================*/ 
. 
. ********************************************************************************
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         qui sum `variable' if `variable' `condition'
  5.         file write tablecontent (r(max)) _tab
  6.         
.         cou if `variable' `condition'
  7.         local rowdenom = r(N)
  8.         local colpct = 100*(r(N)/`overalldenom')
  9.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct') (")") _tab
 10. 
.         cou if exposure == 0 
 11.         local rowdenom = r(N)
 12.         cou if exposure == 0 & `variable' `condition'
 13.         local pct = 100*(r(N)/`rowdenom') 
 14.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _tab
 15. 
.         cou if exposure == 1 
 16.         local rowdenom = r(N)
 17.         cou if exposure == 1 & `variable' `condition'
 18.         local pct = 100*(r(N)/`rowdenom')
 19.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _tab
 20. 
.         cou if exposure == 2
 21.         local rowdenom = r(N)
 22.         cou if exposure == 2 & `variable' `condition'
 23.         local pct = 100*(r(N)/`rowdenom')
 24.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _tab
 25. 
.         cou if exposure >= .
 26.         local rowdenom = r(N)
 27.         cou if exposure >= . & `variable' `condition'
 28.         local pct = 100*(r(N)/`rowdenom')
 29.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _n
 30.         
. end

. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then tab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. ********************************************************************************
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition(">=.")
  8. 
. end

. 
. ********************************************************************************
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. ********************************************************************************
. * Generic code to summarize a continous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4.         
.         qui summarize `variable', d
  5.         file write tablecontent ("Median (IQR)") _tab 
  6.         file write tablecontent (round(r(p50)),0.01) (" (") (round(r(p25)),0.01) ("-") (round(r(p75)),0.01) (")") _tab
  7.                                                         
.         qui summarize `variable' if exposure == 0, d
  8.         file write tablecontent (round(r(p50)),0.01) (" (") (round(r(p25)),0.01) ("-") (round(r(p75)),0.01) (")") _tab
  9. 
.         qui summarize `variable' if exposure == 1, d
 10.         file write tablecontent (round(r(p50)),0.01) (" (") (round(r(p25)),0.01) ("-") (round(r(p75)),0.01) (")") _tab
 11.         
.         qui summarize `variable' if exposure == 2, d
 12.         file write tablecontent (round(r(p50)),0.01) (" (") (round(r(p25)),0.01) ("-") (round(r(p75)),0.01) (")") _tab
 13. 
.         qui summarize `variable' if exposure >= ., d
 14.         file write tablecontent (round(r(p50)),0.01) (" (") (round(r(p25)),0.01) ("-") (round(r(p75)),0.01) (")") _n
 15.         
.         qui summarize `variable', d
 16.         file write tablecontent ("Mean (SD)") _tab 
 17.         file write tablecontent (round(r(mean)),0.01) (" (") (round(r(sd)),0.01) (")") _tab
 18.                                                         
.         qui summarize `variable' if exposure == 0, d
 19.         file write tablecontent (round(r(mean)),0.01) (" (") (round(r(sd)),0.01) (")") _tab
 20. 
.         qui summarize `variable' if exposure == 1, d
 21.         file write tablecontent (round(r(mean)),0.01) (" (") (round(r(sd)),0.01) (")") _tab
 22.         
.         qui summarize `variable' if exposure == 2, d
 23.         file write tablecontent (round(r(mean)),0.01) (" (") (round(r(sd)),0.01) (")") _tab
 24. 
.         qui summarize `variable' if exposure >= ., d
 25.         file write tablecontent (round(r(mean)),0.01) (" (") (round(r(sd)),0.01) (")") _n
 26.         
.         
.         qui summarize `variable', d
 27.         file write tablecontent ("Min, Max") _tab 
 28.         file write tablecontent (round(r(min)),0.01) (", ") (round(r(max)),0.01) ("") _tab
 29.                                                         
.         qui summarize `variable' if exposure == 0, d
 30.         file write tablecontent (round(r(min)),0.01) (", ") (round(r(max)),0.01) ("") _tab
 31. 
.         qui summarize `variable' if exposure == 1, d
 32.         file write tablecontent (round(r(min)),0.01) (", ") (round(r(max)),0.01) ("") _tab
 33.         
.         qui summarize `variable' if exposure == 2, d
 34.         file write tablecontent (round(r(min)),0.01) (", ") (round(r(max)),0.01) ("") _tab
 35. 
.         qui summarize `variable' if exposure >= ., d
 36.         file write tablecontent (round(r(min)),0.01) (", ") (round(r(max)),0.01) ("") _n
 37.         
. end

. 
. 
. /* INVOKE PROGRAMS FOR TABLE 1================================================*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./$outdir/table1.txt, write text replace

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics - $population") _n

. 
. * Exposure labelled columns
. 
. local lab0: label exposure 0

. local lab1: label exposure 1

. local lab2: label exposure 2

. local labu: label exposure .u

. 
. 
. file write tablecontent _tab ("Total")                                                    _tab ///
>                                                          ("`lab0'")                                                   _tab ///
>                                                          ("`lab1'")                                               _tab ///
>                                                          ("`lab2'")                                                       _tab ///
>                                                          ("`labu'")                                                       _n 

. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. gen byte cons=1

. tabulatevariable, variable(cons) min(1) max(1) 
  1,285,855
  1,285,855
  108,441
  108,441
  608,972
  608,972
  101,077
  101,077
  467,365
  467,365

. file write tablecontent _n 

. 
. tabulatevariable, variable(agegroup) min(1) max(6) 
  1,285,855
  417,459
  108,441
  36,264
  608,972
  144,955
  101,077
  18,836
  467,365
  217,404
  1,285,855
  235,490
  108,441
  22,067
  608,972
  107,835
  101,077
  18,459
  467,365
  87,129
  1,285,855
  253,288
  108,441
  21,852
  608,972
  130,434
  101,077
  23,752
  467,365
  77,250
  1,285,855
  181,994
  108,441
  13,974
  608,972
  105,897
  101,077
  18,970
  467,365
  43,153
  1,285,855
  130,684
  108,441
  9,209
  608,972
  79,810
  101,077
  13,904
  467,365
  27,761
  1,285,855
  66,940
  108,441
  5,075
  608,972
  40,041
  101,077
  7,156
  467,365
  14,668

. file write tablecontent _n 

. 
. tabulatevariable, variable(male) min(0) max(1) 
  1,285,855
  750,523
  108,441
  61,827
  608,972
  363,526
  101,077
  62,487
  467,365
  262,683
  1,285,855
  535,332
  108,441
  46,614
  608,972
  245,446
  101,077
  38,590
  467,365
  204,682

. file write tablecontent _n 

. 
. tabulatevariable, variable(bmicat) min(1) max(6) missing
  1,285,855
  19,140
  108,441
  1,637
  608,972
  7,623
  101,077
  1,147
  467,365
  8,733
  1,285,855
  340,745
  108,441
  28,141
  608,972
  153,022
  101,077
  20,955
  467,365
  138,627
  1,285,855
  394,872
  108,441
  32,874
  608,972
  196,599
  101,077
  30,763
  467,365
  134,636
  1,285,855
  239,387
  108,441
  20,069
  608,972
  122,212
  101,077
  22,297
  467,365
  74,809
  1,285,855
  112,084
  108,441
  9,497
  608,972
  56,837
  101,077
  11,891
  467,365
  33,859
  1,285,855
  67,819
  108,441
  5,937
  608,972
  34,102
  101,077
  8,248
  467,365
  19,532
  1,285,855
  111,808
  108,441
  10,286
  608,972
  38,577
  101,077
  5,776
  467,365
  57,169

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke) min(1) max(3) missing 
  1,285,855
  590,091
  108,441
  45,384
  608,972
  268,922
  101,077
  41,231
  467,365
  234,554
  1,285,855
  498,181
  108,441
  42,272
  608,972
  254,334
  101,077
  44,137
  467,365
  157,438
  1,285,855
  195,461
  108,441
  20,625
  608,972
  85,414
  101,077
  15,665
  467,365
  73,757
  1,285,855
  2,122
  108,441
  160
  608,972
  302
  101,077
  44
  467,365
  1,616

. file write tablecontent _n 

. 
. tabulatevariable, variable(ethnicity) min(1) max(5) missing 
  1,285,855
  883,635
  108,441
  74,402
  608,972
  428,142
  101,077
  71,303
  467,365
  309,788
  1,285,855
  12,941
  108,441
  978
  608,972
  5,028
  101,077
  838
  467,365
  6,097
  1,285,855
  72,109
  108,441
  5,698
  608,972
  32,357
  101,077
  5,866
  467,365
  28,188
  1,285,855
  20,499
  108,441
  1,546
  608,972
  8,139
  101,077
  1,455
  467,365
  9,359
  1,285,855
  12,202
  108,441
  892
  608,972
  4,863
  101,077
  881
  467,365
  5,566
  1,285,855
  284,469
  108,441
  24,925
  608,972
  130,443
  101,077
  20,734
  467,365
  108,367

. file write tablecontent _n 

. 
. tabulatevariable, variable(imd) min(1) max(5) missing
  1,285,855
  260,479
  108,441
  21,087
  608,972
  124,406
  101,077
  17,776
  467,365
  97,210
  1,285,855
  261,702
  108,441
  21,705
  608,972
  124,312
  101,077
  18,956
  467,365
  96,729
  1,285,855
  258,640
  108,441
  22,016
  608,972
  121,926
  101,077
  20,217
  467,365
  94,481
  1,285,855
  258,487
  108,441
  22,392
  608,972
  121,117
  101,077
  21,478
  467,365
  93,500
  1,285,855
  246,547
  108,441
  21,241
  608,972
  117,211
  101,077
  22,650
  467,365
  85,445
  1,285,855
  0
  108,441
  0
  608,972
  0
  101,077
  0
  467,365
  0

. file write tablecontent _n 

. 
. tabulatevariable, variable(diabcat) min(1) max(4) missing
  1,285,855
  1,126,834
  108,441
  93,589
  608,972
  523,874
  101,077
  83,064
  467,365
  426,307
  1,285,855
  105,907
  108,441
  8,946
  608,972
  57,866
  101,077
  12,254
  467,365
  26,841
  1,285,855
  48,890
  108,441
  5,551
  608,972
  25,283
  101,077
  5,436
  467,365
  12,620
  1,285,855
  4,224
  108,441
  355
  608,972
  1,949
  101,077
  323
  467,365
  1,597
  1,285,855
  0
  108,441
  0
  608,972
  0
  101,077
  0
  467,365
  0

. file write tablecontent _n 

. 
. file write tablecontent _n _n

. 
. ** COPD TREATMENT VARIABLES (binary)
. foreach treat of varlist        saba_single             ///
>                                                         high_dose_ics           ///
>                                                         low_med_dose_ics        ///
>                                                         ics_single              ///
>                                                         sama_single             ///
>                                                         laba_single                     ///
>                                                         lama_single                     ///
>                                                         laba_ics                        ///
>                                                         laba_lama                       ///
>                                                         laba_lama_ics           ///
>                             ltra_single                 ///     
>                                                 {               
  2. 
. local lab: variable label `treat'
  3. file write tablecontent ("`lab'") _n 
  4.         
. generaterow, variable(`treat') condition("==0")
  5. generaterow, variable(`treat') condition("==1")
  6. 
. file write tablecontent _n
  7. 
. }
  1,285,855
  679,705
  108,441
  0
  608,972
  191,964
  101,077
  22,855
  467,365
  464,886
  1,285,855
  606,150
  108,441
  108,441
  608,972
  417,008
  101,077
  78,222
  467,365
  2,479
  1,285,855
  1,181,864
  108,441
  108,441
  608,972
  606,058
  101,077
  0
  467,365
  467,365
  1,285,855
  103,991
  108,441
  0
  608,972
  2,914
  101,077
  101,077
  467,365
  0
  1,285,855
  669,336
  108,441
  108,441
  608,972
  0
  101,077
  93,530
  467,365
  467,365
  1,285,855
  616,519
  108,441
  0
  608,972
  608,972
  101,077
  7,547
  467,365
  0
  1,285,855
  994,887
  108,441
  108,441
  608,972
  328,092
  101,077
  90,989
  467,365
  467,365
  1,285,855
  290,968
  108,441
  0
  608,972
  280,880
  101,077
  10,088
  467,365
  0
  1,285,855
  1,283,033
  108,441
  108,325
  608,972
  607,342
  101,077
  100,181
  467,365
  467,185
  1,285,855
  2,822
  108,441
  116
  608,972
  1,630
  101,077
  896
  467,365
  180
  1,285,855
  1,277,335
  108,441
  107,898
  608,972
  603,012
  101,077
  99,574
  467,365
  466,851
  1,285,855
  8,520
  108,441
  543
  608,972
  5,960
  101,077
  1,503
  467,365
  514
  1,285,855
  1,269,483
  108,441
  108,441
  608,972
  600,935
  101,077
  92,742
  467,365
  467,365
  1,285,855
  16,372
  108,441
  0
  608,972
  8,037
  101,077
  8,335
  467,365
  0
  1,285,855
  854,214
  108,441
  108,441
  608,972
  270,790
  101,077
  7,618
  467,365
  467,365
  1,285,855
  431,641
  108,441
  0
  608,972
  338,182
  101,077
  93,459
  467,365
  0
  1,285,855
  1,285,498
  108,441
  108,441
  608,972
  608,736
  101,077
  100,956
  467,365
  467,365
  1,285,855
  357
  108,441
  0
  608,972
  236
  101,077
  121
  467,365
  0
  1,285,855
  1,284,592
  108,441
  108,441
  608,972
  607,795
  101,077
  100,991
  467,365
  467,365
  1,285,855
  1,263
  108,441
  0
  608,972
  1,177
  101,077
  86
  467,365
  0
  1,285,855
  1,215,996
  108,441
  108,441
  608,972
  568,504
  101,077
  78,023
  467,365
  461,028
  1,285,855
  69,859
  108,441
  0
  608,972
  40,468
  101,077
  23,054
  467,365
  6,337

. 
. ** COMORBIDITIES (categorical and continous)
. 
. ** COMORBIDITIES (binary)
. 
. foreach comorb in $varlist {
  2. 
.     local comorb: subinstr local comorb "i." ""
  3.     levelsof `comorb'
  4.     if r(r) == 2 {           
  5. 
.        local lab: variable label `comorb'
  6.        file write tablecontent ("`lab'") _n
  7.        generaterow, variable(`comorb') condition("==0")
  8.        generaterow, variable(`comorb') condition("==1")
  9.  
.         file write tablecontent _n
 10.         
.         }
 11.                                 
. }
1 2 3 4
1 2 3
1 2 3 4 5
0 1
  1,285,855
  1,224,572
  108,441
  103,341
  608,972
  573,525
  101,077
  94,026
  467,365
  453,680
  1,285,855
  61,283
  108,441
  5,100
  608,972
  35,447
  101,077
  7,051
  467,365
  13,685
0 1
  1,285,855
  977,445
  108,441
  82,598
  608,972
  432,452
  101,077
  67,206
  467,365
  395,189
  1,285,855
  308,410
  108,441
  25,843
  608,972
  176,520
  101,077
  33,871
  467,365
  72,176
0 1
  1,285,855
  1,263,403
  108,441
  106,459
  608,972
  596,359
  101,077
  98,081
  467,365
  462,504
  1,285,855
  22,452
  108,441
  1,982
  608,972
  12,613
  101,077
  2,996
  467,365
  4,861
0 1
  1,285,855
  1,206,759
  108,441
  101,549
  608,972
  565,066
  101,077
  91,929
  467,365
  448,215
  1,285,855
  79,096
  108,441
  6,892
  608,972
  43,906
  101,077
  9,148
  467,365
  19,150
1 2 3 4
0 1
  1,285,855
  1,218,429
  108,441
  102,740
  608,972
  571,390
  101,077
  94,325
  467,365
  449,974
  1,285,855
  67,426
  108,441
  5,701
  608,972
  37,582
  101,077
  6,752
  467,365
  17,391
0 1
  1,285,855
  1,064,727
  108,441
  90,340
  608,972
  475,969
  101,077
  74,854
  467,365
  423,564
  1,285,855
  221,128
  108,441
  18,101
  608,972
  133,003
  101,077
  26,223
  467,365
  43,801
0 1
  1,285,855
  667,467
  108,441
  65,191
  608,972
  240,861
  101,077
  36,016
  467,365
  325,399
  1,285,855
  618,388
  108,441
  43,250
  608,972
  368,111
  101,077
  65,061
  467,365
  141,966
0 1
  1,285,855
  1,196,221
  108,441
  101,846
  608,972
  557,804
  101,077
  91,105
  467,365
  445,466
  1,285,855
  89,634
  108,441
  6,595
  608,972
  51,168
  101,077
  9,972
  467,365
  21,899
0 1
  1,285,855
  1,076,578
  108,441
  93,231
  608,972
  487,282
  101,077
  64,351
  467,365
  431,714
  1,285,855
  209,277
  108,441
  15,210
  608,972
  121,690
  101,077
  36,726
  467,365
  35,651
0 1
  1,285,855
  1,281,979
  108,441
  108,056
  608,972
  607,221
  101,077
  100,762
  467,365
  465,940
  1,285,855
  3,876
  108,441
  385
  608,972
  1,751
  101,077
  315
  467,365
  1,425

. 
. * COMORBIDITIES (continous)
. 
. summarizevariable, variable(gp_consult_count)

. summarizevariable, variable(exacerbation_count)

. summarizevariable, variable(age)

. 
. file close tablecontent

. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  E:\analyses\opensafely-ics-research\analysis\asthma_log\04_an_descriptive_table_asthma.log
  log type:  text
 closed on:  27 Jul 2020, 13:46:47
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
