----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\analyses\opensafely-ics-research\analysis\asthma_log_sens3\04_an_descriptive_table_asthma.log
  log type:  text
 opened on:  24 Jul 2020, 11:05:25

. 
. * Open Stata dataset
. use $tempdir\analysis_dataset, clear

. 
. /* PROGRAMS TO AUTOMATE TABULATIONS===========================================*/ 
. 
. ********************************************************************************
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         qui sum `variable' if `variable' `condition'
  5.         file write tablecontent (r(max)) _tab
  6.         
.         cou if `variable' `condition'
  7.         local rowdenom = r(N)
  8.         local colpct = 100*(r(N)/`overalldenom')
  9.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct') (")") _tab
 10. 
.         cou if exposure == 0 
 11.         local rowdenom = r(N)
 12.         cou if exposure == 0 & `variable' `condition'
 13.         local pct = 100*(r(N)/`rowdenom') 
 14.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _tab
 15. 
.         cou if exposure == 1 
 16.         local rowdenom = r(N)
 17.         cou if exposure == 1 & `variable' `condition'
 18.         local pct = 100*(r(N)/`rowdenom')
 19.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _tab
 20. 
.         cou if exposure == 2
 21.         local rowdenom = r(N)
 22.         cou if exposure == 2 & `variable' `condition'
 23.         local pct = 100*(r(N)/`rowdenom')
 24.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _tab
 25. 
.         cou if exposure >= .
 26.         local rowdenom = r(N)
 27.         cou if exposure >= . & `variable' `condition'
 28.         local pct = 100*(r(N)/`rowdenom')
 29.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _n
 30.         
. end

. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then tab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. ********************************************************************************
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition(">=.")
  8. 
. end

. 
. ********************************************************************************
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. ********************************************************************************
. * Generic code to summarize a continous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4.         
.         qui summarize `variable', d
  5.         file write tablecontent ("Median (IQR)") _tab 
  6.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  7.                                                         
.         qui summarize `variable' if exposure == 0, d
  8.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  9. 
.         qui summarize `variable' if exposure == 1, d
 10.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
 11.         
.         qui summarize `variable' if exposure == 2, d
 12.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
 13. 
.         qui summarize `variable' if exposure >= ., d
 14.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _n
 15.         
.         qui summarize `variable', d
 16.         file write tablecontent ("Mean (SD)") _tab 
 17.         file write tablecontent (r(mean)) (" (") (r(sd)) (")") _tab
 18.                                                         
.         qui summarize `variable' if exposure == 0, d
 19.         file write tablecontent (r(mean)) (" (") (r(sd)) (")") _tab
 20. 
.         qui summarize `variable' if exposure == 1, d
 21.         file write tablecontent (r(mean)) (" (") (r(sd)) (")") _tab
 22.         
.         qui summarize `variable' if exposure == 2, d
 23.         file write tablecontent (r(mean)) (" (") (r(sd))  (")") _tab
 24. 
.         qui summarize `variable' if exposure >= ., d
 25.         file write tablecontent (r(mean)) (" (") (r(sd))  (")") _n
 26.         
.         
.         qui summarize `variable', d
 27.         file write tablecontent ("Min, Max") _tab 
 28.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 29.                                                         
.         qui summarize `variable' if exposure == 0, d
 30.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 31. 
.         qui summarize `variable' if exposure == 1, d
 32.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 33.         
.         qui summarize `variable' if exposure == 2, d
 34.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 35. 
.         qui summarize `variable' if exposure >= ., d
 36.         file write tablecontent (r(min)) (", ") (r(max)) ("") _n
 37.         
. end

. 
. 
. /* INVOKE PROGRAMS FOR TABLE 1================================================*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./$outdir/table1.txt, write text replace

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics - $population") _n

. 
. * Exposure labelled columns
. 
. local lab0: label exposure 0

. local lab1: label exposure 1

. local lab2: label exposure 2

. local labu: label exposure .u

. 
. 
. file write tablecontent _tab ("Total")                                                    _tab ///
>                                                          ("`lab0'")                                                   _tab ///
>                                                          ("`lab1'")                                               _tab ///
>                                                          ("`lab2'")                                                       _tab ///
>                                                          ("`labu'")                                                       _n 

. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. gen byte cons=1

. tabulatevariable, variable(cons) min(1) max(1) 
  1,331,617
  1,331,617
  134,067
  134,067
  626,669
  626,669
  102,787
  102,787
  468,094
  468,094

. file write tablecontent _n 

. 
. tabulatevariable, variable(agegroup) min(1) max(6) 
  1,331,617
  432,689
  134,067
  45,702
  626,669
  150,222
  102,787
  19,156
  468,094
  217,609
  1,331,617
  244,294
  134,067
  26,951
  626,669
  111,304
  102,787
  18,789
  468,094
  87,250
  1,331,617
  262,218
  134,067
  26,616
  626,669
  134,045
  102,787
  24,165
  468,094
  77,392
  1,331,617
  187,939
  134,067
  17,100
  626,669
  108,307
  102,787
  19,258
  468,094
  43,274
  1,331,617
  134,676
  134,067
  11,204
  626,669
  81,517
  102,787
  14,109
  468,094
  27,846
  1,331,617
  69,801
  134,067
  6,494
  626,669
  41,274
  102,787
  7,310
  468,094
  14,723

. file write tablecontent _n 

. 
. tabulatevariable, variable(male) min(0) max(1) 
  1,331,617
  776,914
  134,067
  76,804
  626,669
  373,481
  102,787
  63,477
  468,094
  263,152
  1,331,617
  554,703
  134,067
  57,263
  626,669
  253,188
  102,787
  39,310
  468,094
  204,942

. file write tablecontent _n 

. 
. tabulatevariable, variable(bmicat) min(1) max(6) missing
  1,331,617
  19,836
  134,067
  2,010
  626,669
  7,915
  102,787
  1,170
  468,094
  8,741
  1,331,617
  351,622
  134,067
  34,235
  626,669
  157,245
  102,787
  21,342
  468,094
  138,800
  1,331,617
  407,283
  134,067
  39,755
  626,669
  201,444
  102,787
  31,231
  468,094
  134,853
  1,331,617
  247,516
  134,067
  24,589
  626,669
  125,337
  102,787
  22,642
  468,094
  74,948
  1,331,617
  116,197
  134,067
  11,785
  626,669
  58,425
  102,787
  12,059
  468,094
  33,928
  1,331,617
  70,474
  134,067
  7,409
  626,669
  35,118
  102,787
  8,367
  468,094
  19,580
  1,331,617
  118,689
  134,067
  14,284
  626,669
  41,185
  102,787
  5,976
  468,094
  57,244

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke) min(1) max(3) missing 
  1,331,617
  609,019
  134,067
  55,839
  626,669
  276,387
  102,787
  41,881
  468,094
  234,912
  1,331,617
  515,002
  134,067
  51,517
  626,669
  260,950
  102,787
  44,810
  468,094
  157,725
  1,331,617
  205,207
  134,067
  26,385
  626,669
  88,942
  102,787
  16,045
  468,094
  73,835
  1,331,617
  2,389
  134,067
  326
  626,669
  390
  102,787
  51
  468,094
  1,622

. file write tablecontent _n 

. 
. tabulatevariable, variable(ethnicity) min(1) max(5) missing 
  1,331,617
  914,237
  134,067
  91,660
  626,669
  439,886
  102,787
  72,447
  468,094
  310,244
  1,331,617
  13,360
  134,067
  1,196
  626,669
  5,199
  102,787
  857
  468,094
  6,108
  1,331,617
  74,371
  134,067
  6,909
  626,669
  33,283
  102,787
  5,943
  468,094
  28,236
  1,331,617
  21,046
  134,067
  1,840
  626,669
  8,357
  102,787
  1,481
  468,094
  9,368
  1,331,617
  12,524
  134,067
  1,067
  626,669
  4,991
  102,787
  895
  468,094
  5,571
  1,331,617
  296,079
  134,067
  31,395
  626,669
  134,953
  102,787
  21,164
  468,094
  108,567

. file write tablecontent _n 

. 
. tabulatevariable, variable(imd) min(1) max(5) missing
  1,331,617
  268,992
  134,067
  25,789
  626,669
  127,762
  102,787
  18,077
  468,094
  97,364
  1,331,617
  270,370
  134,067
  26,579
  626,669
  127,670
  102,787
  19,236
  468,094
  96,885
  1,331,617
  267,910
  134,067
  27,127
  626,669
  125,581
  102,787
  20,557
  468,094
  94,645
  1,331,617
  271,772
  134,067
  28,145
  626,669
  126,466
  102,787
  22,183
  468,094
  94,978
  1,331,617
  252,573
  134,067
  26,427
  626,669
  119,190
  102,787
  22,734
  468,094
  84,222
  1,331,617
  0
  134,067
  0
  626,669
  0
  102,787
  0
  468,094
  0

. file write tablecontent _n 

. 
. tabulatevariable, variable(diabcat) min(1) max(4) missing
  1,331,617
  1,166,523
  134,067
  115,897
  626,669
  539,225
  102,787
  84,486
  468,094
  426,915
  1,331,617
  109,626
  134,067
  11,003
  626,669
  59,263
  102,787
  12,433
  468,094
  26,927
  1,331,617
  51,097
  134,067
  6,734
  626,669
  26,168
  102,787
  5,539
  468,094
  12,656
  1,331,617
  4,371
  134,067
  433
  626,669
  2,013
  102,787
  329
  468,094
  1,596
  1,331,617
  0
  134,067
  0
  626,669
  0
  102,787
  0
  468,094
  0

. file write tablecontent _n 

. 
. file write tablecontent _n _n

. 
. ** COPD TREATMENT VARIABLES (binary)
. foreach treat of varlist        saba_single             ///
>                                                         high_dose_ics           ///
>                                                         low_med_dose_ics        ///
>                                                         ics_single              ///
>                                                         sama_single             ///
>                                                         laba_single                     ///
>                                                         lama_single                     ///
>                                                         laba_ics                        ///
>                                                         laba_lama                       ///
>                                                         laba_lama_ics           ///
>                             ltra_single                 ///     
>                                                 {               
  2. 
. local lab: variable label `treat'
  3. file write tablecontent ("`lab'") _n 
  4.         
. generaterow, variable(`treat') condition("==0")
  5. generaterow, variable(`treat') condition("==1")
  6. 
. file write tablecontent _n
  7. 
. }
  1,331,617
  685,871
  134,067
  0
  626,669
  197,020
  102,787
  23,349
  468,094
  465,502
  1,331,617
  645,746
  134,067
  134,067
  626,669
  429,649
  102,787
  79,438
  468,094
  2,592
  1,331,617
  1,225,892
  134,067
  134,067
  626,669
  623,731
  102,787
  0
  468,094
  468,094
  1,331,617
  105,725
  134,067
  0
  626,669
  2,938
  102,787
  102,787
  468,094
  0
  1,331,617
  697,341
  134,067
  134,067
  626,669
  0
  102,787
  95,180
  468,094
  468,094
  1,331,617
  634,276
  134,067
  0
  626,669
  626,669
  102,787
  7,607
  468,094
  0
  1,331,617
  1,028,486
  134,067
  134,067
  626,669
  333,984
  102,787
  92,341
  468,094
  468,094
  1,331,617
  303,131
  134,067
  0
  626,669
  292,685
  102,787
  10,446
  468,094
  0
  1,331,617
  1,328,635
  134,067
  133,916
  626,669
  624,986
  102,787
  101,879
  468,094
  467,854
  1,331,617
  2,982
  134,067
  151
  626,669
  1,683
  102,787
  908
  468,094
  240
  1,331,617
  1,322,863
  134,067
  133,475
  626,669
  620,590
  102,787
  101,253
  468,094
  467,545
  1,331,617
  8,754
  134,067
  592
  626,669
  6,079
  102,787
  1,534
  468,094
  549
  1,331,617
  1,315,019
  134,067
  134,067
  626,669
  618,482
  102,787
  94,376
  468,094
  468,094
  1,331,617
  16,598
  134,067
  0
  626,669
  8,187
  102,787
  8,411
  468,094
  0
  1,331,617
  892,590
  134,067
  134,067
  626,669
  282,495
  102,787
  7,934
  468,094
  468,094
  1,331,617
  439,027
  134,067
  0
  626,669
  344,174
  102,787
  94,853
  468,094
  0
  1,331,617
  1,331,247
  134,067
  134,067
  626,669
  626,424
  102,787
  102,662
  468,094
  468,094
  1,331,617
  370
  134,067
  0
  626,669
  245
  102,787
  125
  468,094
  0
  1,331,617
  1,330,306
  134,067
  134,067
  626,669
  625,445
  102,787
  102,700
  468,094
  468,094
  1,331,617
  1,311
  134,067
  0
  626,669
  1,224
  102,787
  87
  468,094
  0
  1,331,617
  1,260,614
  134,067
  134,067
  626,669
  585,836
  102,787
  79,591
  468,094
  461,120
  1,331,617
  71,003
  134,067
  0
  626,669
  40,833
  102,787
  23,196
  468,094
  6,974

. 
. ** COMORBIDITIES (categorical and continous)
. 
. ** COMORBIDITIES (binary)
. 
. foreach comorb in $varlist {
  2. 
.     local comorb: subinstr local comorb "i." ""
  3.     levelsof `comorb'
  4.     if r(r) == 2 {           
  5. 
.        local lab: variable label `comorb'
  6.        file write tablecontent ("`lab'") _n
  7.        generaterow, variable(`comorb') condition("==0")
  8.        generaterow, variable(`comorb') condition("==1")
  9.  
.         file write tablecontent _n
 10.         
.         }
 11.                                 
. }
1 2 3 4
1 2 3
1 2 3 4 5
0 1
  1,331,617
  1,267,805
  134,067
  127,652
  626,669
  590,200
  102,787
  95,596
  468,094
  454,357
  1,331,617
  63,812
  134,067
  6,415
  626,669
  36,469
  102,787
  7,191
  468,094
  13,737
0 1
  1,331,617
  1,012,153
  134,067
  102,384
  626,669
  445,718
  102,787
  68,346
  468,094
  395,705
  1,331,617
  319,464
  134,067
  31,683
  626,669
  180,951
  102,787
  34,441
  468,094
  72,389
0 1
  1,331,617
  1,308,018
  134,067
  131,457
  626,669
  613,614
  102,787
  99,739
  468,094
  463,208
  1,331,617
  23,599
  134,067
  2,610
  626,669
  13,055
  102,787
  3,048
  468,094
  4,886
0 1
  1,331,617
  1,249,122
  134,067
  125,358
  626,669
  581,436
  102,787
  93,458
  468,094
  448,870
  1,331,617
  82,495
  134,067
  8,709
  626,669
  45,233
  102,787
  9,329
  468,094
  19,224
1 2 3 4
0 1
  1,331,617
  1,261,548
  134,067
  126,917
  626,669
  588,065
  102,787
  95,914
  468,094
  450,652
  1,331,617
  70,069
  134,067
  7,150
  626,669
  38,604
  102,787
  6,873
  468,094
  17,442
0 1
  1,331,617
  1,102,507
  134,067
  111,819
  626,669
  490,392
  102,787
  76,160
  468,094
  424,136
  1,331,617
  229,110
  134,067
  22,248
  626,669
  136,277
  102,787
  26,627
  468,094
  43,958
0 1
  1,331,617
  699,014
  134,067
  83,925
  626,669
  252,203
  102,787
  37,038
  468,094
  325,848
  1,331,617
  632,603
  134,067
  50,142
  626,669
  374,466
  102,787
  65,749
  468,094
  142,246
0 1
  1,331,617
  1,239,495
  134,067
  126,138
  626,669
  574,530
  102,787
  92,694
  468,094
  446,133
  1,331,617
  92,122
  134,067
  7,929
  626,669
  52,139
  102,787
  10,093
  468,094
  21,961
0 1
  1,331,617
  1,115,285
  134,067
  115,205
  626,669
  502,097
  102,787
  65,667
  468,094
  432,316
  1,331,617
  216,332
  134,067
  18,862
  626,669
  124,572
  102,787
  37,120
  468,094
  35,778
0 1
  1,331,617
  1,327,565
  134,067
  133,593
  626,669
  624,842
  102,787
  102,464
  468,094
  466,666
  1,331,617
  4,052
  134,067
  474
  626,669
  1,827
  102,787
  323
  468,094
  1,428

. 
. * COMORBIDITIES (continous)
. 
. summarizevariable, variable(gp_consult_count)

. summarizevariable, variable(exacerbation_count)

. summarizevariable, variable(age)

. 
. file close tablecontent

. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  E:\analyses\opensafely-ics-research\analysis\asthma_log_sens3\04_an_descriptive_table_asthma.log
  log type:  text
 closed on:  24 Jul 2020, 11:06:32
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
