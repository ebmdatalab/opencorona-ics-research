-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\analyses\opensafely-ics-research\analysis\copd_log_sens2\04_an_descriptive_table_copd.log
  log type:  text
 opened on:   9 Jun 2020, 11:41:13

. 
. * Open Stata dataset
. use $tempdir\analysis_dataset, clear

. 
. /* PROGRAMS TO AUTOMATE TABULATIONS===========================================*/ 
. 
. ********************************************************************************
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         qui sum `variable' if `variable' `condition'
  5.         file write tablecontent (r(max)) _tab
  6.         
.         cou if `variable' `condition'
  7.         local rowdenom = r(N)
  8.         local colpct = 100*(r(N)/`overalldenom')
  9.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct') (")") _tab
 10. 
.         cou if exposure == 0 
 11.         local rowdenom = r(N)
 12.         cou if exposure == 0 & `variable' `condition'
 13.         local pct = 100*(r(N)/`rowdenom') 
 14.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _tab
 15. 
.         cou if exposure == 1 
 16.         local rowdenom = r(N)
 17.         cou if exposure == 1 & `variable' `condition'
 18.         local pct = 100*(r(N)/`rowdenom')
 19.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _tab
 20. 
.         cou if exposure >= .
 21.         local rowdenom = r(N)
 22.         cou if exposure >= . & `variable' `condition'
 23.         local pct = 100*(r(N)/`rowdenom')
 24.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _n
 25.         
. end

. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then tab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. ********************************************************************************
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition(">=.")
  8. 
. end

. 
. ********************************************************************************
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. ********************************************************************************
. * Generic code to summarize a continous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4.         
.         qui summarize `variable', d
  5.         file write tablecontent ("Median (IQR)") _tab 
  6.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  7.                                                         
.         qui summarize `variable' if exposure == 0, d
  8.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  9. 
.         qui summarize `variable' if exposure == 1, d
 10.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
 11. 
.         qui summarize `variable' if exposure >= ., d
 12.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _n
 13.         
.         qui summarize `variable', d
 14.         file write tablecontent ("Mean (SD)") _tab 
 15.         file write tablecontent (r(mean)) (" (") (r(sd)) (")") _tab
 16.                                                         
.         qui summarize `variable' if exposure == 0, d
 17.         file write tablecontent (r(mean)) (" (") (r(sd)) (")") _tab
 18. 
.         qui summarize `variable' if exposure == 1, d
 19.         file write tablecontent (r(mean)) (" (") (r(sd)) (")") _tab
 20.         
.         qui summarize `variable' if exposure == 2, d
 21.         file write tablecontent (r(mean)) (" (") (r(sd))  (")") _tab
 22. 
.         qui summarize `variable' if exposure >= ., d
 23.         file write tablecontent (r(mean)) (" (") (r(sd))  (")") _n
 24.         
.         qui summarize `variable', d
 25.         file write tablecontent ("Min, Max") _tab 
 26.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 27.                                                         
.         qui summarize `variable' if exposure == 0, d
 28.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 29. 
.         qui summarize `variable' if exposure == 1, d
 30.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 31. 
.         qui summarize `variable' if exposure >= ., d
 32.         file write tablecontent (r(min)) (", ") (r(max)) ("") _n
 33.         
. end

. 
. /* QUESTION FOR STATA REVIEWER - I WROTE THIS CONTINOUS VAR SUMMARY PROGRAM
> but I don't quite understand why I seem to need ("") on the last row for the 
> maxium value to display properly? Otherwise it seems to just be missing. 
> 
> Please check this extra carefully as well
> 
> */ 
. 
. /* INVOKE PROGRAMS FOR TABLE 1================================================*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./$outdir/table1.txt, write text replace

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics - $population") _n

. 
. * Exposure labelled columns
. 
. local lab0: label exposure 0

. local lab1: label exposure 1

. local labu: label exposure .u

. 
. file write tablecontent _tab ("Total")                                                    _tab ///
>                                                          ("`lab0'")                                                   _tab ///
>                                                          ("`lab1'")                                               _tab ///
>                                                          ("`labu'")                                                       _n 

. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. gen byte cons=1

. tabulatevariable, variable(cons) min(1) max(1) 
  291,805
  291,805
  43,278
  43,278
  105,210
  105,210
  143,317
  143,317

. file write tablecontent _n 

. 
. tabulatevariable, variable(agegroup) min(1) max(6) 
  291,805
  1,232
  43,278
  85
  105,210
  184
  143,317
  963
  291,805
  10,028
  43,278
  1,060
  105,210
  2,289
  143,317
  6,679
  291,805
  40,910
  43,278
  5,746
  105,210
  12,237
  143,317
  22,927
  291,805
  80,788
  43,278
  12,599
  105,210
  29,519
  143,317
  38,670
  291,805
  104,319
  43,278
  16,092
  105,210
  40,370
  143,317
  47,857
  291,805
  54,528
  43,278
  7,696
  105,210
  20,611
  143,317
  26,221

. file write tablecontent _n 

. 
. tabulatevariable, variable(male) min(0) max(1) 
  291,805
  133,738
  43,278
  19,699
  105,210
  48,707
  143,317
  65,332
  291,805
  158,067
  43,278
  23,579
  105,210
  56,503
  143,317
  77,985

. file write tablecontent _n 

. 
. tabulatevariable, variable(bmicat) min(1) max(6) missing
  291,805
  11,359
  43,278
  1,682
  105,210
  4,744
  143,317
  4,933
  291,805
  89,195
  43,278
  12,938
  105,210
  31,858
  143,317
  44,399
  291,805
  95,443
  43,278
  14,011
  105,210
  33,494
  143,317
  47,938
  291,805
  55,541
  43,278
  8,590
  105,210
  20,278
  143,317
  26,673
  291,805
  22,054
  43,278
  3,568
  105,210
  8,379
  143,317
  10,107
  291,805
  10,006
  43,278
  1,580
  105,210
  3,945
  143,317
  4,481
  291,805
  8,207
  43,278
  909
  105,210
  2,512
  143,317
  4,786

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke) min(1) max(3) missing 
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0
  291,805
  184,400
  43,278
  26,015
  105,210
  69,710
  143,317
  88,675
  291,805
  107,405
  43,278
  17,263
  105,210
  35,500
  143,317
  54,642
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0

. file write tablecontent _n 

. 
. tabulatevariable, variable(ethnicity) min(1) max(5) missing 
  291,805
  218,717
  43,278
  32,455
  105,210
  79,682
  143,317
  106,580
  291,805
  676
  43,278
  92
  105,210
  186
  143,317
  398
  291,805
  3,366
  43,278
  258
  105,210
  835
  143,317
  2,273
  291,805
  1,208
  43,278
  103
  105,210
  302
  143,317
  803
  291,805
  1,060
  43,278
  113
  105,210
  286
  143,317
  661
  291,805
  66,778
  43,278
  10,257
  105,210
  23,919
  143,317
  32,602

. file write tablecontent _n 

. 
. tabulatevariable, variable(imd) min(1) max(5) missing
  291,805
  58,902
  43,278
  8,049
  105,210
  19,893
  143,317
  30,960
  291,805
  58,779
  43,278
  8,419
  105,210
  20,619
  143,317
  29,741
  291,805
  59,175
  43,278
  8,755
  105,210
  21,235
  143,317
  29,185
  291,805
  57,633
  43,278
  8,431
  105,210
  21,634
  143,317
  27,568
  291,805
  57,316
  43,278
  9,624
  105,210
  21,829
  143,317
  25,863
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0

. file write tablecontent _n 

. 
. tabulatevariable, variable(diabcat) min(1) max(4) missing
  291,805
  221,197
  43,278
  32,888
  105,210
  79,531
  143,317
  108,778
  291,805
  51,265
  43,278
  7,583
  105,210
  19,011
  143,317
  24,671
  291,805
  18,561
  43,278
  2,711
  105,210
  6,363
  143,317
  9,487
  291,805
  782
  43,278
  96
  105,210
  305
  143,317
  381
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0

. file write tablecontent _n 

. 
. file write tablecontent _n _n

. 
. ** COPD TREATMENT VARIABLES (binary)
. foreach treat of varlist        saba_single             ///
>                                                         high_dose_ics           ///
>                                                         low_med_dose_ics        ///
>                                                         ics_single              ///
>                                                         sama_single             ///
>                                                         laba_single                     ///
>                                                         lama_single                     ///
>                                                         laba_ics                        ///
>                                                         laba_lama                       ///
>                                                         laba_lama_ics           ///
>                             ltra_single                 ///     
>                                                 {               
  2. 
. local lab: variable label `treat'
  3. file write tablecontent ("`lab'") _n 
  4.         
. generaterow, variable(`treat') condition("==0")
  5. generaterow, variable(`treat') condition("==1")
  6. 
. file write tablecontent _n
  7. 
. }
  291,805
  125,025
  43,278
  12,349
  105,210
  21,544
  143,317
  91,132
  291,805
  166,780
  43,278
  30,929
  105,210
  83,666
  143,317
  52,185
  291,805
  266,112
  43,278
  43,278
  105,210
  79,748
  143,317
  143,086
  291,805
  25,693
  43,278
  0
  105,210
  25,462
  143,317
  231
  291,805
  204,577
  43,278
  43,278
  105,210
  22,739
  143,317
  138,560
  291,805
  87,228
  43,278
  0
  105,210
  82,471
  143,317
  4,757
  291,805
  284,499
  43,278
  43,278
  105,210
  102,887
  143,317
  138,334
  291,805
  7,306
  43,278
  0
  105,210
  2,323
  143,317
  4,983
  291,805
  288,487
  43,278
  43,120
  105,210
  103,725
  143,317
  141,642
  291,805
  3,318
  43,278
  158
  105,210
  1,485
  143,317
  1,675
  291,805
  283,744
  43,278
  40,849
  105,210
  104,356
  143,317
  138,539
  291,805
  8,061
  43,278
  2,429
  105,210
  854
  143,317
  4,778
  291,805
  204,171
  43,278
  38,690
  105,210
  59,736
  143,317
  105,745
  291,805
  87,634
  43,278
  4,588
  105,210
  45,474
  143,317
  37,572
  291,805
  216,279
  43,278
  43,278
  105,210
  29,684
  143,317
  143,317
  291,805
  75,526
  43,278
  0
  105,210
  75,526
  143,317
  0
  291,805
  245,652
  43,278
  1,929
  105,210
  100,406
  143,317
  143,317
  291,805
  46,153
  43,278
  41,349
  105,210
  4,804
  143,317
  0
  291,805
  258,774
  43,278
  43,278
  105,210
  72,179
  143,317
  143,317
  291,805
  33,031
  43,278
  0
  105,210
  33,031
  143,317
  0
  291,805
  291,805
  43,278
  43,278
  105,210
  105,210
  143,317
  143,317
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0

. 
. ** COMORBIDITIES (categorical and continous)
. 
. ** COMORBIDITIES (binary)
. foreach comorb in $varlist { 
  2.         local comorb: subinstr local comorb "i." ""
  3.         local lab: variable label `comorb'
  4.         file write tablecontent ("`lab'") _n 
  5.                                                                 
.         generaterow, variable(`comorb') condition("==0")
  6.         generaterow, variable(`comorb') condition("==1")
  7.         file write tablecontent _n
  8. }
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0
  291,805
  204,204
  43,278
  29,540
  105,210
  72,608
  143,317
  102,056
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0
  291,805
  58,902
  43,278
  8,049
  105,210
  19,893
  143,317
  30,960
  291,805
  241,927
  43,278
  35,547
  105,210
  86,857
  143,317
  119,523
  291,805
  49,878
  43,278
  7,731
  105,210
  18,353
  143,317
  23,794
  291,805
  146,895
  43,278
  21,595
  105,210
  50,961
  143,317
  74,339
  291,805
  144,910
  43,278
  21,683
  105,210
  54,249
  143,317
  68,978
  291,805
  267,221
  43,278
  39,424
  105,210
  95,255
  143,317
  132,542
  291,805
  24,584
  43,278
  3,854
  105,210
  9,955
  143,317
  10,775
  291,805
  226,356
  43,278
  33,233
  105,210
  81,114
  143,317
  112,009
  291,805
  65,449
  43,278
  10,045
  105,210
  24,096
  143,317
  31,308
  291,805
  0
  43,278
  0
  105,210
  0
  143,317
  0
  291,805
  221,197
  43,278
  32,888
  105,210
  79,531
  143,317
  108,778
  291,805
  251,789
  43,278
  37,060
  105,210
  90,144
  143,317
  124,585
  291,805
  40,016
  43,278
  6,218
  105,210
  15,066
  143,317
  18,732
  291,805
  150,420
  43,278
  20,517
  105,210
  50,894
  143,317
  79,009
  291,805
  141,385
  43,278
  22,761
  105,210
  54,316
  143,317
  64,308
  291,805
  73,828
  43,278
  8,683
  105,210
  19,904
  143,317
  45,241
  291,805
  217,977
  43,278
  34,595
  105,210
  85,306
  143,317
  98,076
  291,805
  231,323
  43,278
  32,266
  105,210
  83,906
  143,317
  115,151
  291,805
  60,482
  43,278
  11,012
  105,210
  21,304
  143,317
  28,166
  291,805
  236,123
  43,278
  34,748
  105,210
  77,858
  143,317
  123,517
  291,805
  55,682
  43,278
  8,530
  105,210
  27,352
  143,317
  19,800
  291,805
  236,592
  43,278
  37,705
  105,210
  76,033
  143,317
  122,854
  291,805
  55,213
  43,278
  5,573
  105,210
  29,177
  143,317
  20,463
  291,805
  290,160
  43,278
  43,073
  105,210
  104,672
  143,317
  142,415
  291,805
  1,645
  43,278
  205
  105,210
  538
  143,317
  902

. 
. * COMORBIDITIES (continous)
. 
. summarizevariable, variable(gp_consult_count)

. summarizevariable, variable(exacerbation_count)

. summarizevariable, variable(age)

. 
. file close tablecontent

. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  E:\analyses\opensafely-ics-research\analysis\copd_log_sens2\04_an_descriptive_table_copd.log
  log type:  text
 closed on:   9 Jun 2020, 11:41:25
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
